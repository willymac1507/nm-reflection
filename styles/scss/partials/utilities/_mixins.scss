// Media queries
@mixin mq($break) {
    $value: map-get($breakpoints, $break);
    $sm: map-get($breakpoints, 'sm');

    @if $value==null {
        @error "#{$break} is not a valid breakpopint name.";
    }

    @else if $value < $sm {
        @media (max-width: $value) {
            @content;
        }
    }

    @else {
        @media (min-width: $value) {
            @content;
        }
    }
}

// Page container flex attributes
@mixin page-container {
    @include flexy-center;
    width: 92vw;
    max-width: 1072px;
}

// Header container flex attributes
@mixin header-container($basis, $direction) {
    display: flex;
    flex-basis: $basis;
    align-items: center;
    height: 100%;
    justify-items: $direction;
}

// Center all flex items
@mixin flexy-center {
    display: flex;
    align-items: center;
}

// Main section layout container
@mixin layout-div {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

// Colors
@mixin service-color($map) {

    @each $theme,
    $color, $icon in $map {
        &-#{$theme} {
            @include page-container;
            height: 334px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 3px;
            box-shadow: 0 3px 35px rgba(0, 0, 0, 0.1);

            &:hover {
                background-color: $color;
                color: #fff;

                div {
                    background-color: #fff;
                    color: $color;
                }
            }
        }

        &-icon-container-#{$theme} {
            height: 60px;
            width: 60px;
            margin: 0 auto 17px;
            border-radius: 50%;
            background-color: $color;
        }

        &-icon-#{$theme} {
            color: #fff;
        }

        &-button-#{$theme} {
            background-color: $color;
        }
    }
}